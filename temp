void Game::store_game(void)
{
    std::string folderPath = "../gameLog/";
    struct stat info;
    if (stat(folderPath.c_str(), &info) != 0)
    {
        if (mkdir(folderPath.c_str(), 0777) != 0)
        {
            return;
        }
    }
    else if (!(info.st_mode & S_IFDIR))
    {
        return;
    }
    std::time_t now = std::time(nullptr);
    char timeStamp[20];
        

    std::string subFolderPath = folderPath + "game_" + timeStamp + "/";
    if (mkdir(subFolderPath.c_str(), 0777) != 0)
    {
        return;
    }

    std::string city_log_name = subFolderPath + "cities.txt";
    std::ofstream city_log(city_log_name);
    if (city_log.is_open())
    {
        city_log << "Name, y, x, hitpoint, deposit, productivity\n";
        for (const auto &city : cities)
        {
            city_log << city.name << ", " << city.position.y << ", " << city.position.x << ", " << city.hitpoint << ", " << city.deposit << ", " << city.productivity << "\n";
        }
        city_log.close();
    }

    std::string atkmissile_log_name = subFolderPath + "atkmissiles.txt";
    std::ofstream atkmissile_log(atkmissile_log_name);
    if (atkmissile_log.is_open())
    {
        atkmissile_log << "y, x, target_y, target_x, progress, damage, speed\n";
        for (auto &missile : missile_manager.get_attack_missiles())
        {
            std::string progress_str = missile->progress2str();
            atkmissile_log << missile->get_position().y << ", " << missile->get_position().x << ", " << missile->target.y << ", " << missile->target.x << ", " << progress_str << ", " << missile->damage << ", " << missile->speed << "\n";
        }
        atkmissile_log.close();
    }

    std::string crumissile_log_name = subFolderPath + "crumissiles.txt";
    std::ofstream crumissile_log(crumissile_log_name);
    if (crumissile_log.is_open())
    {
        crumissile_log << "y, x, target_y, target_x, progress, damage, speed\n";
        for (auto &missile : missile_manager.get_cruise_missiles())
        {
            std::string progress_str = missile->progress2str();
            crumissile_log << missile->get_position().y << ", " << missile->get_position().x << ", " << missile->target.y << ", " << missile->target.x << ", " << progress_str << ", " << missile->damage << ", " << missile->speed << "\n";
        }
        crumissile_log.close();
    }

    std::string game_info_name = subFolderPath + "general.txt";
    std::ofstream game_info_log(game_info_name);
    if (game_info_log.is_open())
    {
        game_info_log << "turn, cursor_y, cursor_x, missile_manager_hitpoint\n";
        game_info_log << turn << ", " << cursor.y << ", " << cursor.x << ", " << missile_manager.hitpoint << "\n";
    }
}